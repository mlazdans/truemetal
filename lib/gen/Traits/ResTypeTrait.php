<?php declare(strict_types = 1);

# AUTOGENERATED - DO NOT MODIFY!

use dqdp\PropertyInitTrait;
use dqdp\DBA\Types\Varchar;

trait ResTypeTrait {
	use PropertyInitTrait;

	readonly int $res_id;
	readonly ?int $res_resid;
	readonly int $table_id;
	readonly ?int $login_id;
	readonly ?string $res_entered;
	readonly ?string $res_nickname;
	readonly ?string $res_email;
	readonly ?string $res_ip;
	readonly int $res_visible;
	readonly ?string $res_name;
	readonly ?string $res_intro;
	readonly ?string $res_data;
	readonly ?string $res_data_compiled;

	function __construct(array|object|null $data = null, array|object|null $defaults = null, bool $is_dirty = false) {
		parent::__construct($data, $defaults, $is_dirty);
		if(!prop_initialized($this, 'res_visible'))$this->res_visible = (int)1;
	}

	static function initres_nickname(mixed $v): string {
		return (string)(new VarChar($v, 32));
	}

	static function initres_email(mixed $v): string {
		return (string)(new VarChar($v, 128));
	}

	static function initres_ip(mixed $v): string {
		return (string)(new VarChar($v, 32));
	}

	function save(): mixed {
		return (new ResEntity)->save($this);
	}

	function insert(): mixed {
		return (new ResEntity)->insert($this);
	}

	function delete(): bool {
		return (new ResEntity)->delete($this->res_id);
	}

	function update(): bool {
		return (new ResEntity)->update($this->res_id, $this);
	}
}
