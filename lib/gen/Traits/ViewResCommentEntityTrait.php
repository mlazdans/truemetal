<?php declare(strict_types = 1);

# AUTOGENERATED - DO NOT MODIFY!

use dqdp\DBA\AbstractFilter;

trait ViewResCommentEntityTrait
{
	function get_table_name(): string {
		return 'view_res_comment';
	}

	function get_pk(): string|array|null {
		return 'c_id';
	}

	function get_gen(): ?string {
		return null;
	}

	static function get(int $ID, ?AbstractFilter $DF = null): ?ViewResCommentType {
		return (new static)->get_single((new ViewResCommentFilter(c_id: $ID))->merge($DF));
	}

	function get_all(?AbstractFilter $filters = null): ViewResCommentCollection {
		$col = new ViewResCommentCollection;
		if($this->query($filters)){
			while($r = $this->fetch()){
				$col[] = $r;
			}
		}

		return $col;
	}

	function fetch(): ?ViewResCommentType {
		if($data = parent::fetch($this->Q)){
			return ViewResCommentType::initFrom($data);
		} else {
			return null;
		}
	}

	function save(array|object $DATA): mixed {
		return parent::save($DATA);
	}

	function insert(array|object $DATA): mixed {
		return parent::insert($DATA);
	}

	function update(int|string|array $ID, array|object $DATA): bool {
		return parent::update($ID, $DATA);
	}
}
