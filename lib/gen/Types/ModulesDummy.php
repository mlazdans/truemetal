<?php declare(strict_types = 1);

# AUTOGENERATED - DO NOT MODIFY!

# This Dummy type is useful for inner manipulations that do not require all the strictness
# NULL properties has to be set outside constructor

use dqdp\StricStdObject;

class ModulesDummy extends StricStdObject {
	var int $mod_id;
	var ?int $mod_modid;
	var string $module_id;
	var string $module_name;
	var string $module_descr;
	var int $module_active;
	var int $module_visible;
	var int $module_pos;
	var string $module_data;
	var string $module_entered;
	var string $module_type;

	function __construct(?int $mod_id = null, ?int $mod_modid = null, ?string $module_id = null, ?string $module_name = null, ?string $module_descr = null, ?int $module_active = null, ?int $module_visible = null, ?int $module_pos = null, ?string $module_data = null, ?string $module_entered = null, ?string $module_type = null) {
		if(isset($mod_id))$this->mod_id = $mod_id;
		if(isset($mod_modid))$this->mod_modid = $mod_modid;
		if(isset($module_id))$this->module_id = $module_id;
		if(isset($module_name))$this->module_name = $module_name;
		if(isset($module_descr))$this->module_descr = $module_descr;
		if(isset($module_active))$this->module_active = $module_active;
		if(isset($module_visible))$this->module_visible = $module_visible;
		if(isset($module_pos))$this->module_pos = $module_pos;
		if(isset($module_data))$this->module_data = $module_data;
		if(isset($module_entered))$this->module_entered = $module_entered;
		if(isset($module_type))$this->module_type = $module_type;
	}

	function real(): ModulesType {
		return ModulesType::initFrom($this);
	}
}
